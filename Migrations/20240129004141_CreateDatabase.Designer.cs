// <auto-generated />
using System;
using HotelProjeto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelProjeto.Migrations
{
    [DbContext(typeof(HotelProjetoContext))]
    [Migration("20240129004141_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelProjeto.MCargo", b =>
                {
                    b.Property<int>("CodCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCargo"));

                    b.Property<string>("NomeCargo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CodCargo");

                    b.ToTable("MCargo");
                });

            modelBuilder.Entity("HotelProjeto.MCliente", b =>
                {
                    b.Property<int>("CodCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCliente"));

                    b.Property<string>("Email")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nome")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CodCliente");

                    b.ToTable("MCliente");
                });

            modelBuilder.Entity("HotelProjeto.MConsumoRestauranteFrigobar", b =>
                {
                    b.Property<int>("CodConsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodConsumo"));

                    b.Property<int?>("ContaNumeroConta")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("RestauranteEntregaQuarto")
                        .HasColumnType("bit");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("CodConsumo");

                    b.HasIndex("ContaNumeroConta");

                    b.ToTable("MConsumoRestauranteFrigobar");
                });

            modelBuilder.Entity("HotelProjeto.MConta", b =>
                {
                    b.Property<int>("NumeroConta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroConta"));

                    b.Property<int>("ClienteCodCliente")
                        .HasColumnType("int");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.HasKey("NumeroConta");

                    b.HasIndex("ClienteCodCliente");

                    b.ToTable("MConta");
                });

            modelBuilder.Entity("HotelProjeto.MEndereco", b =>
                {
                    b.Property<int>("CodEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodEndereco"));

                    b.Property<string>("Bairro")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Estado")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("CodEndereco");

                    b.ToTable("MEndereco");
                });

            modelBuilder.Entity("HotelProjeto.MFilial", b =>
                {
                    b.Property<int>("CodFilial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodFilial"));

                    b.Property<int?>("EnderecoCodEndereco")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("QuantidadeEstrelas")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeQuartoCasal")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeQuartoFamilia")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeQuartoPresidencial")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeQuartoSolteiro")
                        .HasColumnType("int");

                    b.HasKey("CodFilial");

                    b.HasIndex("EnderecoCodEndereco");

                    b.ToTable("MFilial");
                });

            modelBuilder.Entity("HotelProjeto.MFormaPagamento", b =>
                {
                    b.Property<int>("CodForma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodForma"));

                    b.Property<string>("Forma")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CodForma");

                    b.ToTable("MFormaPagamento");
                });

            modelBuilder.Entity("HotelProjeto.MFuncionario", b =>
                {
                    b.Property<int>("CodFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodFuncionario"));

                    b.Property<int?>("CargoCodCargo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("CodFuncionario");

                    b.HasIndex("CargoCodCargo");

                    b.ToTable("MFuncionario");
                });

            modelBuilder.Entity("HotelProjeto.MPagamento", b =>
                {
                    b.Property<int>("CodPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodPagamento"));

                    b.Property<int?>("ContaNumeroConta")
                        .HasColumnType("int");

                    b.Property<int?>("FormaCodForma")
                        .HasColumnType("int");

                    b.HasKey("CodPagamento");

                    b.HasIndex("ContaNumeroConta");

                    b.HasIndex("FormaCodForma");

                    b.ToTable("MPagamento");
                });

            modelBuilder.Entity("HotelProjeto.MQuarto", b =>
                {
                    b.Property<int>("NumeroQuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroQuarto"));

                    b.Property<int?>("TipoQuartoCodTipo")
                        .HasColumnType("int");

                    b.Property<double>("ValorQuarto")
                        .HasColumnType("float");

                    b.HasKey("NumeroQuarto");

                    b.HasIndex("TipoQuartoCodTipo");

                    b.ToTable("MQuarto");
                });

            modelBuilder.Entity("HotelProjeto.MReserva", b =>
                {
                    b.Property<int>("CodReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodReserva"));

                    b.Property<int?>("ClienteCodCliente")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DataCheckin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataCheckout")
                        .HasColumnType("date");

                    b.Property<int?>("FuncionarioCodFuncionario")
                        .HasColumnType("int");

                    b.Property<int?>("QuartoNumeroQuarto")
                        .HasColumnType("int");

                    b.HasKey("CodReserva");

                    b.HasIndex("ClienteCodCliente");

                    b.HasIndex("FuncionarioCodFuncionario");

                    b.HasIndex("QuartoNumeroQuarto");

                    b.ToTable("MReserva");
                });

            modelBuilder.Entity("HotelProjeto.MServicoLavanderia", b =>
                {
                    b.Property<int>("CodServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodServico"));

                    b.Property<int?>("NumeroConta1")
                        .HasColumnType("int");

                    b.Property<int?>("TipoServicoCodTipoServico")
                        .HasColumnType("int");

                    b.HasKey("CodServico");

                    b.HasIndex("NumeroConta1");

                    b.HasIndex("TipoServicoCodTipoServico");

                    b.ToTable("MServicoLavanderia");
                });

            modelBuilder.Entity("HotelProjeto.MTipoQuarto", b =>
                {
                    b.Property<int>("CodTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTipo"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int");

                    b.Property<bool>("CapacidadeOpcional")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CodTipo");

                    b.ToTable("MTipoQuarto");
                });

            modelBuilder.Entity("HotelProjeto.MTipoServicoLavanderia", b =>
                {
                    b.Property<int>("CodTipoServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTipoServico"));

                    b.Property<string>("Servico")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("CodTipoServico");

                    b.ToTable("MTipoServicoLavanderia");
                });

            modelBuilder.Entity("HotelProjeto.MConsumoRestauranteFrigobar", b =>
                {
                    b.HasOne("HotelProjeto.MConta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaNumeroConta");

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("HotelProjeto.MConta", b =>
                {
                    b.HasOne("HotelProjeto.MCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteCodCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("HotelProjeto.MFilial", b =>
                {
                    b.HasOne("HotelProjeto.MEndereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoCodEndereco");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("HotelProjeto.MFuncionario", b =>
                {
                    b.HasOne("HotelProjeto.MCargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoCodCargo");

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("HotelProjeto.MPagamento", b =>
                {
                    b.HasOne("HotelProjeto.MConta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaNumeroConta");

                    b.HasOne("HotelProjeto.MFormaPagamento", "Forma")
                        .WithMany()
                        .HasForeignKey("FormaCodForma");

                    b.Navigation("Conta");

                    b.Navigation("Forma");
                });

            modelBuilder.Entity("HotelProjeto.MQuarto", b =>
                {
                    b.HasOne("HotelProjeto.MTipoQuarto", "TipoQuarto")
                        .WithMany()
                        .HasForeignKey("TipoQuartoCodTipo");

                    b.Navigation("TipoQuarto");
                });

            modelBuilder.Entity("HotelProjeto.MReserva", b =>
                {
                    b.HasOne("HotelProjeto.MCliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteCodCliente");

                    b.HasOne("HotelProjeto.MFuncionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioCodFuncionario");

                    b.HasOne("HotelProjeto.MQuarto", "Quarto")
                        .WithMany()
                        .HasForeignKey("QuartoNumeroQuarto");

                    b.Navigation("Cliente");

                    b.Navigation("Funcionario");

                    b.Navigation("Quarto");
                });

            modelBuilder.Entity("HotelProjeto.MServicoLavanderia", b =>
                {
                    b.HasOne("HotelProjeto.MConta", "NumeroConta")
                        .WithMany()
                        .HasForeignKey("NumeroConta1");

                    b.HasOne("HotelProjeto.MTipoServicoLavanderia", "TipoServico")
                        .WithMany()
                        .HasForeignKey("TipoServicoCodTipoServico");

                    b.Navigation("NumeroConta");

                    b.Navigation("TipoServico");
                });
#pragma warning restore 612, 618
        }
    }
}
